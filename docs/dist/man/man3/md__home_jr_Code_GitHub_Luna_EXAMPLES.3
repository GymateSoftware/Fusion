.TH "md__home_jr_Code_GitHub_Luna_EXAMPLES" 3 "Tue Apr 11 2023" "Version 0.0.1" "Luna" \" -*- nroff -*-
.ad l
.nh
.SH NAME
md__home_jr_Code_GitHub_Luna_EXAMPLES \- Examples 
.PP

.SH "Math"
.PP
LunaR supports executing literal math expressions directly and will print the output automatically if one is detected\&.
.PP
.PP
.nf
››› 2 + 2

Output ⇛ 4
(took: 0\&.01ms)
.fi
.PP
.PP
.PP
.nf
››› 2 + 2 * 8

Output ⇛ 18
(took: 0\&.01ms)
.fi
.PP
.PP
.PP
.nf
››› 2 + 2 % (1 + 1)

Output ⇛ 0
(took: 0\&.01ms)
.fi
.PP
.SH "Variables"
.PP
To create a variable in Luna, you simply give it a name and assign it a value:
.PP
.PP
.nf
››› x = 2
(x ⇛ 2)

››› msg = 'hello!'
(msg ⇛ 'hello')
.fi
.PP
.SH "I/O"
.PP
To print a value to the console, you can use the \fCprint\fP function:
.PP
.PP
.nf
››› print 'hello'
⇛ hello
.fi
.PP
.PP
To read a value from the console input, you can use the \fCinput\fP function:
.PP
.PP
.nf
››› x = input
x ⇛ <some input>

››› print x
⇛ <some input>
.fi
.PP
 
